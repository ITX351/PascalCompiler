(24, program)
(65, arugal)
(51, ;)
(32, var)
(65, n)
(49, ,)
(65, b)
(50, :)
(1, array)
(60, [)
(67, 0)
(69, ..)
(67, 1001)
(61, ])
(20, of)
(65, longint)
(51, ;)
(65, dp)
(50, :)
(1, array)
(60, [)
(67, 0)
(69, ..)
(67, 1001)
(49, ,)
(67, 0)
(69, ..)
(67, 101)
(61, ])
(20, of)
(65, longint)
(51, ;)
(65, p)
(50, :)
(1, array)
(60, [)
(67, 0)
(69, ..)
(67, 1001)
(49, ,)
(67, 0)
(69, ..)
(67, 101)
(49, ,)
(67, 1)
(69, ..)
(67, 2)
(61, ])
(20, of)
(65, longint)
(51, ;)
(65, ans)
(49, ,)
(65, z)
(49, ,)
(65, r)
(49, ,)
(65, v)
(49, ,)
(65, a)
(49, ,)
(65, w)
(49, ,)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, k)
(49, ,)
(65, t)
(49, ,)
(65, m)
(50, :)
(65, longint)
(51, ;)
(12, function)
(65, min)
(58, ()
(65, a)
(49, ,)
(65, b)
(50, :)
(65, longint)
(59, ))
(50, :)
(65, longint)
(51, ;)
(2, begin)
(14, if)
(65, a)
(46, >)
(65, b)
(28, then)
(65, min)
(64, :=)
(65, b)
(8, else)
(65, min)
(64, :=)
(65, a)
(51, ;)
(9, end)
(51, ;)
(65, procedure)
(65, out)
(58, ()
(65, x)
(49, ,)
(65, y)
(50, :)
(65, longint)
(59, ))
(51, ;)
(2, begin)
(14, if)
(65, x)
(44, <>)
(67, 1)
(28, then)
(65, out)
(58, ()
(65, x)
(36, -)
(67, 1)
(49, ,)
(65, p)
(60, [)
(65, x)
(49, ,)
(65, y)
(49, ,)
(67, 1)
(61, ])
(59, ))
(51, ;)
(65, writeln)
(58, ()
(65, p)
(60, [)
(65, x)
(49, ,)
(65, y)
(49, ,)
(67, 2)
(61, ])
(59, ))
(51, ;)
(9, end)
(51, ;)
(2, begin)
(65, assign)
(58, ()
(65, input)
(49, ,)
(68, 'arugal.in')
(59, ))
(51, ;)
(65, reset)
(58, ()
(65, input)
(59, ))
(51, ;)
(65, assign)
(58, ()
(65, output)
(49, ,)
(68, 'arugal.out')
(59, ))
(51, ;)
(65, rewrite)
(58, ()
(65, output)
(59, ))
(51, ;)
(65, readln)
(58, ()
(65, t)
(49, ,)
(65, v)
(49, ,)
(65, a)
(49, ,)
(65, w)
(59, ))
(51, ;)
(11, for)
(65, i)
(64, :=)
(67, 1)
(29, to)
(65, t)
(6, do)
(65, readln)
(58, ()
(65, n)
(60, [)
(65, i)
(61, ])
(49, ,)
(65, b)
(60, [)
(65, i)
(61, ])
(59, ))
(51, ;)
(65, fillchar)
(58, ()
(65, dp)
(49, ,)
(65, sizeof)
(58, ()
(65, dp)
(59, ))
(49, ,)
(67, 63)
(59, ))
(51, ;)
(65, r)
(64, :=)
(65, dp)
(60, [)
(67, 0)
(49, ,)
(67, 0)
(61, ])
(51, ;)
(65, dp)
(60, [)
(67, 0)
(49, ,)
(67, 0)
(61, ])
(64, :=)
(67, 0)
(51, ;)
(11, for)
(65, i)
(64, :=)
(67, 1)
(29, to)
(65, t)
(6, do)
(11, for)
(65, j)
(64, :=)
(65, v)
(7, downto)
(67, 0)
(6, do)
(14, if)
(65, dp)
(60, [)
(65, i)
(36, -)
(67, 1)
(49, ,)
(65, j)
(61, ])
(44, <>)
(65, r)
(28, then)
(11, for)
(65, z)
(64, :=)
(67, 0)
(29, to)
(65, a)
(6, do)
(14, if)
(58, ()
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(45, >=)
(67, 0)
(59, ))
(0, and)
(58, ()
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(48, <=)
(65, v)
(59, ))
(28, then)
(14, if)
(65, dp)
(60, [)
(65, i)
(36, -)
(67, 1)
(49, ,)
(65, j)
(61, ])
(35, +)
(65, z)
(37, *)
(65, b)
(60, [)
(65, i)
(61, ])
(35, +)
(58, ()
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(59, ))
(37, *)
(65, w)
(47, <)
(65, dp)
(60, [)
(65, i)
(49, ,)
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(61, ])
(28, then)
(2, begin)
(65, dp)
(60, [)
(65, i)
(49, ,)
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(61, ])
(64, :=)
(65, dp)
(60, [)
(65, i)
(36, -)
(67, 1)
(49, ,)
(65, j)
(61, ])
(35, +)
(65, z)
(37, *)
(65, b)
(60, [)
(65, i)
(61, ])
(35, +)
(58, ()
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(59, ))
(37, *)
(65, w)
(51, ;)
(65, p)
(60, [)
(65, i)
(49, ,)
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(49, ,)
(67, 1)
(61, ])
(64, :=)
(65, j)
(51, ;)
(65, p)
(60, [)
(65, i)
(49, ,)
(65, j)
(35, +)
(65, z)
(36, -)
(65, n)
(60, [)
(65, i)
(61, ])
(49, ,)
(67, 2)
(61, ])
(64, :=)
(65, z)
(51, ;)
(9, end)
(51, ;)
(65, ans)
(64, :=)
(65, maxlongint)
(51, ;)
(11, for)
(65, i)
(64, :=)
(67, 0)
(29, to)
(65, v)
(6, do)
(14, if)
(65, ans)
(46, >)
(65, dp)
(60, [)
(65, t)
(49, ,)
(65, i)
(61, ])
(28, then)
(2, begin)
(65, ans)
(64, :=)
(65, dp)
(60, [)
(65, t)
(49, ,)
(65, i)
(61, ])
(51, ;)
(65, j)
(64, :=)
(65, i)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(65, ans)
(59, ))
(51, ;)
(65, out)
(58, ()
(65, t)
(49, ,)
(65, j)
(59, ))
(51, ;)
(65, close)
(58, ()
(65, output)
(59, ))
(51, ;)
(9, end)
(56, .)

a 11
ans 7
arugal 1
assign 24
b 3
close 33
dp 5
fillchar 30
i 13
input 25
j 14
k 15
longint 4
m 17
maxlongint 32
min 18
n 2
out 20
output 27
p 6
procedure 19
r 9
readln 29
reset 26
rewrite 28
sizeof 31
t 16
v 10
w 12
writeln 23
x 21
y 22
z 8
